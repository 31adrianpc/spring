spring.application.name=eurekaserver
#Instancia 1
server.port=8761
#eureka.instance.hostname=localhost
# Instancia 2
#server.port=8762
#eureka.instance.hostname=localhost
# Ambas instancias
eureka.instance.prefer-ip-address=false
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/,http://localhost:8762/eureka/

# En false, es para evitar que el servidor Eureka se registre a sí mismo y en otros servidores Eureka
eureka.client.register-with-eureka=true
# En false es para que no busque el registro de servidores Eureka
eureka.client.fetch-registry=true
# En false, eliminará instancias si no se renuevan en el tiempo esperado
eureka.server.enable-self-preservation=true
# Tiempo que espera entre renovaciones de cliente
eureka.server.expected-client-renewal-interval-seconds=20
# Porcentaje minimo de renovaciones esperadas para que el servidor Eureka no entre en modo de preservación
# Si activamos la autopreservación y se alcanza una tasa menor, entra en modo de preservación
# Si es mayor, eliminará las instancias que no se hayan renovado
# Dado que la autopreservación está desactivada, este valor no afectará
# Con esto buscamos evitar que el servidor elimine instancias cuando muchos clientes
# dejan de enviar renovaciones por algún problema de red cuando aún están activos
eureka.server.renewal-percent-threshold=0.85